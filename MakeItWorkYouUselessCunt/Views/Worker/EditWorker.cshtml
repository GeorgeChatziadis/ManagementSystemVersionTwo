@model ManagementSystemVersionTwo.ViewModels.EditWorker
@{
    ViewBag.Title = "EditWorker";
}

<h2>Edit Worker</h2>

@using (Html.BeginForm("EditWorker", "Worker", FormMethod.Post, new { enctype = "multipart/form-data", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => Model.UserID)
    <h4>Workers Details</h4>
    <div class="form-row col-md-6 worker-details">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DateOfBirth, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.BankAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankAccount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankAccount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-3">
            <span class="col-md-2">Department</span>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdOfDepartment, new SelectList(Model.AllDepartments, "ID", "City"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdOfDepartment, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-3">
            <span class="col-md-2">Role</span>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedRole, new SelectList(Model.Roles, "Id", "Name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelectedRole, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-3">
            <label>CV</label>
            <input type="file" name="img[]" class="file-upload-default">
            <div class="input-group col-md-12">

                @Html.TextBoxFor(m => Model.CV, new { type = "file", accept = "application/pdf", @class = "form-control file-upload-info" })
                @Html.ValidationMessageFor(m => Model.CV, "", new { @class = "" })

            </div>
        </div>

        <div class="form-group col-md-3">
            <label>Contract of Employement</label>
            <input type="file" name="img[]" class="file-upload-default">
            <div class="input-group col-md-12">
                @Html.TextBoxFor(m => Model.ContractOfEmployment, new { type = "file", accept = "application/pdf", @class = "form-control file-upload-info" })
                @Html.ValidationMessageFor(m => Model.ContractOfEmployment, "", new { @class = "" })
            </div>
        </div>

        <div class="form-group col-md-3">
            <label>Profile Picture</label>
            <input type="file" name="img[]" class="file-upload-default">
            <div class="input-group col-md-12">
                @Html.TextBoxFor(m => Model.ProfilePicture, new { onchange = "ChangePic(this)", type = "file", accept = "image/jpeg", @class = "form-control file-upload-info" })
                @Html.ValidationMessageFor(m => Model.ProfilePicture, "", new { @class = "" })
            </div>
        </div>
    </div>
}

<div>
    <input type="submit" value="Save" class="btn btn-info btn-fw" />
    @Html.ActionLink("Return to List", "../Display/ViewAllWorkers")
</div>