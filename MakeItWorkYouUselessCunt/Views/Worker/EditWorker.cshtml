@model ManagementSystemVersionTwo.ViewModels.EditWorker
@{
    ViewBag.Title = "Edit Worker";
}


@using (Html.BeginForm("EditWorker", "Worker", FormMethod.Post, new { enctype = "multipart/form-data", autocomplete = "off", id = "Form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => Model.UserID)
    <div class="form-horizontal">
        <h2> Edit Worker</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <span class="control-label col-md-2">First Name</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">Last Name</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <span class="control-label col-md-2">Username</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">
            <span class="control-label col-md-2">Email</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <span class="control-label col-md-2">Date of Birth</span>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DateOfBirth, "{0:yyyy/MM/dd}", new { @class = "form-control", id = "birth" })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger", id = "birthError" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">Gender</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">Address</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">Bank Account</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankAccount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankAccount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">Salary</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <span class="col-md-2 control-label ">Department</span>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdOfDepartment, new SelectList(Model.AllDepartments, "ID", "City"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdOfDepartment, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <span class="col-md-2 control-label ">Role</span>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedRole, new SelectList(Model.Roles, "Id", "Name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelectedRole, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">CV</label>
            <input type="file" name="img[]" class="file-upload-default">
            <div class="input-group col-md-12">

                @Html.TextBoxFor(m => Model.CV, new { type = "file", accept = "application/pdf", @class = "form-control file-upload-info" })
                @Html.ValidationMessageFor(m => Model.CV, "", new { @class = "" })

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Contract of Employement</label>
            <input type="file" name="img[]" class="file-upload-default">
            <div class="input-group col-md-12">
                @Html.TextBoxFor(m => Model.ContractOfEmployment, new { type = "file", accept = "application/pdf", @class = "form-control file-upload-info" })
                @Html.ValidationMessageFor(m => Model.ContractOfEmployment, "", new { @class = "" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Profile Picture</label>
            <input type="file" name="img[]" class="file-upload-default">
            <div class="input-group col-md-12">
                @Html.TextBoxFor(m => Model.ProfilePicture, new { onchange = "ChangePic(this)", type = "file", accept = "image/jpeg", @class = "form-control file-upload-info" })
                @Html.ValidationMessageFor(m => Model.ProfilePicture, "", new { @class = "" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submit-btn" type="button" value="Update" class="btn btn-info btn-fw" />
                @Html.ActionLink("Return to List", "ViewAllWorkers", "Display", null, new { @class = "btn btn-info btn-fw" })
            </div>
        </div>

    </div>
}

<script>
    const birthDate = document.getElementById("birth");
    const birthError = document.getElementById("birthError");
    const btn = document.getElementById("submit-btn");
    var year = new Date().getFullYear();
    var birth = new Date(birthDate.value).getFullYear();
    var age = year - birth;

    btn.addEventListener('click', (event) => {
        event.preventDefault();
        if (age >= 18 && age <= 72) {
            document.getElementById("Form").submit();
        }
        else {
            birthError.innerText = "Must be an Adult or not too Old";
        }

    });

</script>