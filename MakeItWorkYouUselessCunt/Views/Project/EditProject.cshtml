@model ManagementSystemVersionTwo.ViewModels.EditProjectViewModel
@{
    ViewBag.Title = "Edit Project";
}

<div class="row">
    <div class="col-12 grid-margin">
        <div class="col-lg-6 grid-margin stretch-card">
            <div style="margin: auto;" class="card">
                <div class="card-body">
                    <h3 class="views-headings">Edit Project</h3>
                    <p class="views-comments">Here you can edit the Project Information.</p>
                    <hr />
                    @using (Html.BeginForm("EditProject", "Project", FormMethod.Post, new { enctype = "multipart/form-data", autocomplete = "off",id="Form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(s => s.Project.ID)
                        <div class="forms-sample">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Project.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-sm-5">
                                    @Html.EditorFor(model => model.Project.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Project.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Project.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-sm-5">
                                    @Html.EditorFor(model => model.Project.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Project.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Project Attachments</label>
                                <input type="file" name="img[]" class="file-upload-default">
                                <div class="input-group col-xs-12">
                                    @Html.TextBoxFor(m => m.Attach, new { type = "file", @class = "" })
                                    @Html.ValidationMessageFor(model => model.Attach, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div id=""></div>
                            <div class="form-group">
                                Start Date
                                <div class="col-sm-5">
                                    @Html.TextBoxFor(model => model.Project.StartDate, "{0:yyyy/MM/dd}", new { @class = "form-control",id="startDate"} )
                                    @Html.ValidationMessageFor(model => model.Project.StartDate, "", new { @class = "text-danger",id="startDateError"})
                                </div>
                            </div>
                            <div class="form-group">
                                End Date
                                <div class="col-sm-5">
                                    @Html.TextBoxFor(model => model.Project.EndDate, "{0:yyyy/MM/dd}", new { @class = "form-control", id = "endDate" })
                                    @Html.ValidationMessageFor(model => model.Project.EndDate, "", new { @class = "text-danger", id = "endDateError" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-5">
                                    <span class="control-label col-md-2"> Is it Completed ?</span>
                                    @Html.CheckBoxFor(model => model.Project.Finished, new { htmlAttributes = new { @class = "form-control", id = "start" } })
                                    @Html.ValidationMessageFor(model => model.Project.Finished, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <table class="create-project table table-striped">
                                    <thead>
                                        <tr>
                                            <th> Assign </th>
                                            <th> Picture </th>
                                            <th> Full Name </th>
                                            <th> CV </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.Users.Count; i++)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.HiddenFor(m => m.Users[i].ID)
                                                    @if (Model.Users[i].IsSelected == true)
                                                    {
                                                        @Html.CheckBoxFor(m => m.Users[i].IsSelected, new { @checked = "checked" })
                                                    }
                                                    else
                                                    {
                                                        @Html.CheckBoxFor(m => m.Users[i].IsSelected)
                                                    }
                                                </td>
                                                <td>
                                                    <img src="~/ProfPics/@Model.Users[i].Pic" alt="image" />
                                                </td>
                                                <td> @Html.DisplayFor(m => m.Users[i].Fullname) </td>
                                                
                                                <td> <a href="~/CVs/@Model.Users[i].CV" target="_blank">CV Details</a> </td>
                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>
                            <div class="d-flex flex-row bd-highlight mb-3">
                                <button id="submit-btn" type="button" class="btn btn-info btn-fw">Update</button>
                                <button class="btn btn-light">@Html.ActionLink("Back to List", "ViewAllProjects", "Display")</button>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>

<script>
    const startDate = document.getElementById("startDate");
    const startDateError = document.getElementById("startDateError");
    const endDate = document.getElementById("endDate");
    const endError = document.getElementById("endDateError");
    const btn = document.getElementById("submit-btn");

    btn.addEventListener('click', (event) => {
        event.preventDefault();
        if (new Date(startDate.value) <= new Date(endDate.value) && new Date(endDate.value) >= new Date()) {
            document.getElementById("Form").submit();
        }
        else {
            startDateError.innerText = "StartDate is less than endDate";
            endDateError.innerText = "StartDate is less than endDate or EndDate is less than Today"
        }
        
    });

</script>